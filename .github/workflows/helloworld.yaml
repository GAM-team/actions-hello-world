name: Build and test

permissions:
  contents: read
  id-token: write
  attestations: write

defaults:
  run:
    shell: bash

on:
  push:
    paths-ignore:
      - 'wiki/**'
  pull_request:
  schedule:
    - cron: '37 22 * * *'

jobs:
  gha:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-13
          - macos-14
          - macos-15
          - ubuntu-22.04
          - ubuntu-24.04
          - ubuntu-24.04-arm
          - ubuntu-22.04-arm
          - windows-11-arm
          - windows-2025
        
    steps:
    - uses: actions/checkout@v4

    - name: Windows Configure VCode
      uses: ilammy/msvc-dev-cmd@0b201ec74fa43914dc39ae48a89fd1d8cb592756 # 1.13.0
      if: runner.os == 'Windows'
      with:
        arch: ${{ runner.arch }}

    - name: Install WinAppDriver
      if: runner.os == 'Windows'
      run: |
        choco install -y winappdriver

    - name: Enable developer-mode
      if: runner.os == 'Windows'
      shell: cmd
      run : |
       reg add "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock" /t REG_DWORD /f /v "AllowDevelopmentWithoutDevLicense" /d "1"

    - name: Install NPM stuff
      if: runner.os == 'Windows'
      run: |
        npm install -g appium
        npm install --save-dev @wdio/cli
        appium driver install windows

    - name: run stuff
      env:
        cid: ${{ job.container.id }}
        services: ${{ job.services }}
        stat: ${{ job.status }}
        run_num: ${{ github.run_number }}
        run_att: ${{ github.run_attempt }}
      run: |
        python3 -m venv venv
        if [[ "${RUNNER_OS}" == "Windows" ]]; then
          source venv/scripts/activate
          python=venv/scripts/python.exe
          pyinstaller=venv/scripts/pyinstaller.exe
        else
          python=venv/bin/python
          pyinstaller=venv/bin/pyinstaller
        fi
        echo "python=${python}" >> $GITHUB_ENV
        "$python" -m pip install --upgrade pyinstaller pyotp
        echo "print('Hello World.')" > helloworld.py
        "$pyinstaller" --onefile helloworld.py
        file dist/helloworld*
        dist/helloworld
        
    - name: Install Certum MSI
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        $url = "https://files.certum.eu/software/SimplySignDesktop/Windows/9.3.1.66/SimplySignDesktop-9.3.1.66-64-bit-pl.msi"
        $file = "SimplySignDesktop-9.3.1.66-64-bit-pl.msi" 
        Invoke-WebRequest $url -OutFile $file
        $log = "install.log" 
        $procMain = Start-Process "msiexec" "/i `"$file`" /qn /l*! `"$log`"" -NoNewWindow -PassThru
        $procLog = Start-Process "powershell" "Get-Content -Path `"$log`" -Wait" -NoNewWindow -PassThru 
        $procMain.WaitForExit() 
        $procLog.Kill()

    - name: Generate OTP, login and sign
      if: runner.os == 'Windows'
      shell: pwsh
      env:
          TOTP_SECRET: ${{ secrets.TOTP_SECRET }}
      run: |
        $appiumCmd = Get-Command appium
        $appiumPath = $appiumCmd.Path
        Start-Process -Filepath "powershell.exe" -ArgumentList "-File", $appiumPath, "--log-level", "error"
        Start-Sleep -Seconds 10
        write-host "appium started"
        $myotp = venv\scripts\python.exe totp.py
        write-host "running ssd"
        node ssd.js --log-level warn $myotp
        write-host "running ssd again"
        node ssd.js --log-level warn $myotp
        write-host "sleeping during login..."
        Start-Sleep 10
        & 'C:\Program Files (x86)\Windows Kits\10\bin\10.0.26100.0\x64\signtool.exe'  sign /sha1 590dc5bb10dfb31dbff38c0e2f9c35ef0f6d0e9e /tr http://time.certum.pl /td SHA256 /fd SHA256 /v dist/helloworld.exe

    - name: Archive artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # 4.6.2
      with:
        name: helloworld-${{ matrix.os }}
        path: |
          dist/helloworld*

    - name: Publish release
      uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # 2.3.2
      with:
        tag_name: ${{ github.run_id }}-${{ github.run_number }}-${{ matrix.os }}-${{ github.sha }}
        files: |
          dist/helloworld*
